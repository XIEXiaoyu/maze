
1. solve maze: according to the input, display corresponding symbols on the screen. For example, if I read a number 2, I need to display a ‘@‘ symbol, if I meet a 0, I need to display a ‘.’,  if I meet a number 1, I need to display a ‘X’ symbol. To sum up:
2->@
0-> .
1->X
3->$.

2 .quickly review cPrimerPlus chapter 8 by examine examples.

3. Use nested while loop to fetch characters from input(the input.txt file), and translate, terminate and go the next line when confronting newline character, and finally terminally when meet the EOF character. Use getchar() to get read character and use putchar() to output the translated characters.

4. Not use getchar() as stated in item 3, but use cPrimerPlus 8.3 to open files rather than redirection operator like ‘<‘ or ‘>’.

5. Now we try to do the following: given a intpu.txt which contains only one character and then output it to the screen with its corresponding mapping character. Then click the keyboard to transmit the outputted character into another character.

6. use curses Library, #include <curese.h>. In function getmaxyx(wnd,y,x), y and x is determined by the size of my bash terminal. Normally it is 25 * 80, i.e, x is 80. If I zoomin the terminal, then y and x are changing accordingly. So I won't need to modify the default size of my ternimal. I just need to set conditions for my input.txt file to make sure that the rows and columns are not exceeding the size of the terminal. So I need to deal with the first line of my input.txt differently from the left rows.